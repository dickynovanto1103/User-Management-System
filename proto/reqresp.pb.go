// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reqresp.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	RequestID            int32               `protobuf:"varint,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Mapper               map[string]*any.Any `protobuf:"bytes,2,rep,name=mapper,proto3" json:"mapper,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6e6a846fc0301fb, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetRequestID() int32 {
	if m != nil {
		return m.RequestID
	}
	return 0
}

func (m *Request) GetMapper() map[string]*any.Any {
	if m != nil {
		return m.Mapper
	}
	return nil
}

type Response struct {
	ResponseID           int32               `protobuf:"varint,1,opt,name=ResponseID,proto3" json:"ResponseID,omitempty"`
	Mapper               map[string]*any.Any `protobuf:"bytes,2,rep,name=mapper,proto3" json:"mapper,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6e6a846fc0301fb, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponseID() int32 {
	if m != nil {
		return m.ResponseID
	}
	return 0
}

func (m *Response) GetMapper() map[string]*any.Any {
	if m != nil {
		return m.Mapper
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterMapType((map[string]*any.Any)(nil), "proto.Request.MapperEntry")
	proto.RegisterType((*Response)(nil), "proto.Response")
	proto.RegisterMapType((map[string]*any.Any)(nil), "proto.Response.MapperEntry")
}

func init() { proto.RegisterFile("reqresp.proto", fileDescriptor_c6e6a846fc0301fb) }

var fileDescriptor_c6e6a846fc0301fb = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4a, 0x2d, 0x2c,
	0x4a, 0x2d, 0x2e, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x92, 0xe9,
	0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x62, 0x5e, 0x25, 0x44,
	0x85, 0xd2, 0x1a, 0x46, 0x2e, 0xf6, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x19, 0x2e,
	0x4e, 0x28, 0xd3, 0xd3, 0x45, 0x82, 0x51, 0x81, 0x51, 0x83, 0x35, 0x08, 0x21, 0x20, 0x64, 0xc4,
	0xc5, 0x96, 0x9b, 0x58, 0x50, 0x90, 0x5a, 0x24, 0xc1, 0xa4, 0xc0, 0xac, 0xc1, 0x6d, 0x24, 0x05,
	0x31, 0x41, 0x0f, 0xaa, 0x42, 0xcf, 0x17, 0x2c, 0xe9, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0x55,
	0x29, 0xe5, 0xcf, 0xc5, 0x8d, 0x24, 0x2c, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0x36, 0x9a,
	0x33, 0x08, 0xc4, 0x14, 0xd2, 0xe2, 0x62, 0x2d, 0x4b, 0xcc, 0x29, 0x4d, 0x95, 0x60, 0x52, 0x60,
	0xd4, 0xe0, 0x36, 0x12, 0xd1, 0x83, 0xb8, 0x54, 0x0f, 0xe6, 0x52, 0x3d, 0xc7, 0xbc, 0xca, 0x20,
	0x88, 0x12, 0x2b, 0x26, 0x0b, 0x46, 0xa5, 0x0d, 0x8c, 0x5c, 0x1c, 0x41, 0xa9, 0xc5, 0x05, 0xf9,
	0x79, 0xc5, 0xa9, 0x42, 0x72, 0x5c, 0x5c, 0x30, 0x36, 0xdc, 0xc1, 0x48, 0x22, 0x42, 0xc6, 0x68,
	0x2e, 0x96, 0x86, 0xbb, 0x18, 0xa2, 0x84, 0x2e, 0x4e, 0x36, 0x72, 0xe6, 0xe2, 0x0f, 0x2d, 0x4e,
	0x2d, 0x72, 0x49, 0x2c, 0x49, 0x0c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x32, 0xe0, 0xe2,
	0x0e, 0x4e, 0xcd, 0x4b, 0x81, 0x85, 0x3b, 0x1f, 0x6a, 0x48, 0x4a, 0xf1, 0xa3, 0xb9, 0x53, 0x89,
	0x21, 0x89, 0x0d, 0x2c, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xe9, 0xa7, 0x9b, 0xe0,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserDataServiceClient is the client API for UserDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserDataServiceClient interface {
	SendRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type userDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserDataServiceClient(cc *grpc.ClientConn) UserDataServiceClient {
	return &userDataServiceClient{cc}
}

func (c *userDataServiceClient) SendRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.UserDataService/SendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserDataServiceServer is the server API for UserDataService service.
type UserDataServiceServer interface {
	SendRequest(context.Context, *Request) (*Response, error)
}

// UnimplementedUserDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserDataServiceServer struct {
}

func (*UnimplementedUserDataServiceServer) SendRequest(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRequest not implemented")
}

func RegisterUserDataServiceServer(s *grpc.Server, srv UserDataServiceServer) {
	s.RegisterService(&_UserDataService_serviceDesc, srv)
}

func _UserDataService_SendRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserDataServiceServer).SendRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.UserDataService/SendRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserDataServiceServer).SendRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UserDataService",
	HandlerType: (*UserDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRequest",
			Handler:    _UserDataService_SendRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reqresp.proto",
}
